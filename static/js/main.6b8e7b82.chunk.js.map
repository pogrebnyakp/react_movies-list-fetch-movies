{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","query","a","fetch","response","ok","Error","status","json","FindMovie","onSetMovies","setMovies","useState","setMovie","setQuery","showError","setShowError","existMovieError","setExistMovieError","findMovie","Response","useEffect","htmlFor","type","id","placeholder","classnames","value","onChange","event","target","onClick","find","film","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b8e7b82.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie?.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie?.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie?.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=f6a5875a&t=';\n\nexport const getMovie = async (query: string): Promise<Movie> => {\n  const response = await fetch(`${API_URL}${query}`);\n\n  if (!response.ok) {\n    throw new Error(`Status of error: ${response.status}`);\n  }\n\n  return response.json();\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  setMovies: (movies: Movie[]) => void,\n  movies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props>\n= ({ setMovies: onSetMovies, movies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [showError, setShowError] = useState(false);\n  const [existMovieError, setExistMovieError] = useState(false);\n\n  const findMovie = async () => {\n    if (query === '') {\n      return;\n    }\n\n    const response = await getMovie(query);\n\n    if (response.Response !== 'False') {\n      setMovie(response);\n      setShowError(false);\n    } else {\n      setMovie(null);\n      setShowError(true);\n    }\n  };\n\n  useEffect(() => {\n    if (!movie && showError) {\n      setShowError(false);\n    }\n\n    setMovie(null);\n    setExistMovieError(false);\n  }, [query]);\n\n  const addMovie = () => {\n    if (movie === null) {\n      return;\n    }\n\n    const alredyExistMovie = movies.find(film => film.imdbID === movie.imdbID);\n\n    if (alredyExistMovie) {\n      setExistMovieError(true);\n    } else {\n      onSetMovies([...movies, movie]);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classnames(\n                'input',\n                { 'is-danger': showError },\n              )}\n              value={query}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setQuery(event.target.value);\n              }}\n            />\n          </div>\n          {showError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n          {existMovieError && (\n            <p className=\"help is-danger\">\n              There is already such a movie in the list\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}